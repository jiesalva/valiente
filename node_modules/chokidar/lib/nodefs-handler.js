'use strict';

const fs = require('fs');
const sysPath = require('path');
const { promisify } = require('util');
const isBinaryPath = require('is-binary-path');
const {
  isWindows,
  isLinux,
  EMPTY_FN,
  EMPTY_STR,
  KEY_LISTENERS,
  KEY_ERR,
  KEY_RAW,
  HANDLER_KEYS,
  EV_CHANGE,
  EV_ADD,
  EV_ADD_DIR,
  EV_ERROR,
  STR_DATA,
  STR_END,
  BRACE_START,
  STAR
} = require('./constants');

const THROTTLE_MODE_WATCH = 'watch';

const open = promisify(fs.open);
const stat = promisify(fs.stat);
const lstat = promisify(fs.lstat);
const close = promisify(fs.close);
const fsrealpath = promisify(fs.realpath);

const statMethods = { lstat, stat };

// TODO: emit errors properly. Example: EMFILE on Macos.
const foreach = (val, fn) => {
  if (val instanceof Set) {
    val.forEach(fn);
  } else {
    fn(val);
  }
};

const addAndConvert = (main, prop, item) => {
  let container = main[prop];
  if (!(container instanceof Set)) {
    main[prop] = container = new Set([container]);
  }
  container.add(item);
};

const clearItem = cont => key => {
  const set = cont[key];
  if (set instanceof Set) {
    set.clear();
  } else {
    delete cont[key];
  }
};

const delFromSet = (main, prop, item) => {
  const container = main[prop];
  if (container instanceof Set) {
    container.delete(item);
  } else if (container === item) {
    delete main[prop];
  }
};

const isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;

/**
 * @typedef {String} Path
 */

// fs_watch helpers

// object to hold per-process fs_watch instances
// (may be shared across chokidar FSWatcher instances)

/**
 * @typedef {Object} FsWatchContainer
 * @property {Set} listeners
 * @property {Set} errHandlers
 * @property {Set} rawEmitters
 * @property {fs.FSWatcher=} watcher
 * @property {Boolean=} watcherUnusable
 */

/**
 * @type {Map<String,FsWatchContainer>}
 */
const FsWatchInstances = new Map();

/**
 * Instantiates the fs_watch interface
 * @param {String} path to be watched
 * @param {Object} options to be passed to fs_watch
 * @param {Function} listener main event handler
 * @param {Function} errHandler emits info about errors
 * @param {Function} emitRaw emits raw event data
 * @returns {fs.FSWatcher} new fsevents instance
 */
function createFsWatchInstance(path, options, listener, errHandler, emitRaw) {
  const handleEvent = (rawEvent, evPath) => {
    listener(path);
    emitRaw(rawEvent, evPath, {watchedPath: path});

    // emit based on events occurring for files from a directory's watcher in
    // case the file's watcher misses it (and rely on throttling to de-dupe)
    if (evPath && path !== evPath) {
      fsWatchBroadcast(
        sysPath.resolve(path, evPath), KEY_LISTENERS, sysPath.join(path, evPath)
      );
    }
  };
  try {
    return fs.watch(path, options, handleEvent);
  } catch (error) {
    errHandler(error);
  }
}

/**
 * Helper for passing fs_watch event data to a collection of listeners
 * @param {Path} fullPath absolute path bound to fs_watch instance
 * @param {String} type listener type
 * @param {*=} val1 arguments to be passed to listeners
 * @param {*=} val2
 * @param {*=} val3
 */
const fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {
  const cont = FsWatchInstances.get(fullPath);
  if (!cont) return;
  foreach(cont[type], (listener) => {
    listener(val1, val2, val3);
  });
};

/**
 * Instantiates the fs_watch interface or binds listeners
 * to an existing one covering the same file system entry
 * @param {String} path
 * @param {String} fullPath absolute path
 * @param {Object} options to be passed to fs_watch
 * @param {Object} handlers container for event listener functions
 */
const setFsWatchListener = (path, fullPath, options, handlers) => {
  const {listener, errHandler, rawEmitter} = handlers;
  let cont = FsWatchInstances.get(fullPath);

  /** @type {fs.FSWatcher=} */
  let watcher;
  if (!options.persistent) {
    watcher = createFsWatchInstance(
      path, options, listener, errHandler, rawEmitter
    );
    return watcher.close.bind(watcher);
  }
  if (cont) {
    addAndConvert(cont, KEY_LIST≤–∫–∞ –ª–∏—Å—Ç–µ ‚Äû$1‚Äú: —É–Ω–æ—Å —ò–µ –∑–∞–Ω–µ–º–∞—Ä–µ–Ω —ò–µ—Ä —ò–µ —É—ò–µ–¥–Ω–æ —É–∫—ô—É—á–µ–Ω —É —Å–º–µ—Ä–Ω–∏—Ü—É SpellcheckLanguage.–ü–æ–≤–µ–∑–∞–Ω —ò–µ:–°–º–µ—Ä–Ω–∏—Ü–µ –∑–∞ –æ–¥—Å—É—Å—Ç–≤–æ:–ù–∏—ò–µ –∞–∫—Ç–∏–≤–Ω–æ–ø—Ä–æ—Ñ–∏–ª –µ–∫—Ä–∞–Ω–∞ –∑–∞ –ø—Ä–∏—ò–∞–≤—ô–∏–≤–∞—ö–µ–ö–æ–ø–∏—Ä–∞—ò –≤—Ä–µ–¥–Ω–æ—Å—Ç —Å–º–µ—Ä–Ω–∏—Ü–∞ ‚Äû$1‚Äú–ö–æ–ø–∏—Ä–∞—ò –∫–∞–æ JSON–ï–≤–∏–¥–µ–Ω—Ü–∏—ò–µ —Å–º–µ—Ä–Ω–∏—Ü–∞–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ –æ –≤–µ—Ä–∑–∏—ò–∏–ò–∑–≤–µ–∑–∏ –µ–≤–∏–¥–µ–Ω—Ü–∏—ò–µ —É JSON–û—Å–≤–µ–∂–∏ –µ–≤–∏–¥–µ–Ω—Ü–∏—ò–µ–ü—Ä–∏–º–µ—ö–µ–Ω–µ —Å—É —Å–º–µ—Ä–Ω–∏—Ü–µ –∑–∞ —Ç–µ—Å—Ç–∏—Ä–∞—ö–µ. –ü—Ä–µ–≥–ª–µ–¥–∞—ò—Ç–µ –∏—Ö –∏ —É—Å–ø–æ—Å—Ç–∞–≤–∏—Ç–µ –ø–æ—á–µ—Ç–Ω–µ –≤—Ä–µ–¥–Ω–æ—Å—Ç–∏ –Ω–∞ edge://policy/test. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–º–µ—Ä–Ω–∏—Ü–µ –Ω–µ—õ–µ –±–∏—Ç–∏ –ø—Ä–∏–º–µ—ö–µ–Ω–µ.–ù–∏—ò–µ –º–æ–≥—É—õ–µ –¥–µ–ª–∏—Ç–∏ –ø–æ–≤–µ—Ä—ô–∏–≤–∏ —Å–∞–¥—Ä–∂–∞—ò–û–≤–∞ —Å–º–µ—Ä–Ω–∏—Ü–∞ –∞—É—Ç–æ–º–∞—Ç—Å–∫–∏ –æ–Ω–µ–º–æ–≥—É—õ–∞–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—ò—É –Ω–∞ —Å–≤–∏–º —É—Ä–µ—í–∞—ò–∏–º–∞ –∑–∞: $1.–ú–æ—Ä–∞ –±–∏—Ç–∏ –Ω–∞–≤–µ–¥–µ–Ω —ò–µ–¥–∞–Ω –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–Ω–∏ –¥–æ–±–∞–≤—ô–∞—á –ø—Ä–µ—Ç—Ä–∞–≥–µ.–ú–æ–∂–µ —Å–µ –Ω–∞–≤–µ—Å—Ç–∏ —Å–∞–º–æ —ò–µ–¥–∞–Ω –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–Ω–∏ –¥–æ–±–∞–≤—ô–∞—á –ø—Ä–µ—Ç—Ä–∞–≥–µ.–ú–æ–∂–µ –¥–∞ —Å–µ –Ω–∞–≤–µ–¥–µ –Ω–∞—ò–≤–∏—à–µ 100 –¥–æ–±–∞–≤—ô–∞—á–∞ –ø—Ä–µ—Ç—Ä–∞–≥–µ.–û–≤–∞ –≤—Ä–µ–¥–Ω–æ—Å—Ç —Å–º–µ—Ä–Ω–∏—Ü–∞ —Å–µ –∑–∞–Ω–µ–º–∞—Ä—É—ò–µ —ò–µ—Ä —Å–µ –∑–∞ —É–∫—ô—É—á–∏–≤–∞—ö–µ —Ñ—É–Ω–∫—Ü–∏—ò–µ –Ω–∞–¥–≥–ª–µ–¥–∞—ö–∞ –ª–æ–∑–∏–Ω–∫–∏ –∑–∞—Ö—Ç–µ–≤–∞ –ø—Ä–∏—Å—Ç–∞–Ω–∞–∫ –ø–æ—ò–µ–¥–∏–Ω–∞—á–Ω–æ–≥ –∫–æ—Ä–∏—Å–Ω–∏–∫–∞. –ú–æ–∂–µ—Ç–µ —Ç—Ä–∞–∂–∏—Ç–∏ –æ–¥ –∫–æ—Ä–∏—Å–Ω–∏–∫–∞ —É –≤–∞—à–æ—ò –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—ò–∏ –¥–∞ –æ–¥—É —É –ü–æ—Å—Ç–∞–≤–∫–µ > –ü—Ä–æ—Ñ–∏–ª > –õ–æ–∑–∏–Ω–∫–∞ –∏ –¥–∞ —É–∫—ô—É—á–µ –æ–≤—É —Ñ—É–Ω–∫—Ü–∏—ò—É.–û–≤–∞ —Å–º–µ—Ä–Ω–∏—Ü–∞ —ò–µ –∑–∞—Å—Ç–∞—Ä–µ–ª–∞ –∏ –≤–∏—à–µ –Ω–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—à–µ.–°–º–µ—Ä–Ω–∏—Ü–µ —Å—É –ø–æ–Ω–æ–≤–æ —É—á–∏—Ç–∞–Ω–µ–£–ø—Ä–∞–≤—ô–∞—ö–µ —É—Ä–µ—í–∞—ò–∏–º–∞Active Directory –¥–æ–º–µ–Ω —ò–µ –ø—Ä–∏–¥—Ä—É–∂–µ–Ω: $1Azure AD –¥–æ–º–µ–Ω —ò–µ –ø—Ä–∏–¥—Ä—É–∂–µ–Ω: $1MDM —É–ø–∏—Å–∞–Ω: $1–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —ò–µ –±–ª–æ–∫–∏—Ä–∞–æ –æ–≤—É —Å—Ç—Ä–∞–Ω–∏—Ü—É$1 –Ω–∞ —Å–µ—Ä–≤–µ—Ä—É $2–£—Å–ª—É–≥–∞ –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä–∞ —à—Ç–∞–º–ø–∞—ö–∞–ü–æ–±–æ—ô—à–∞–Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç –∑–∞ –æ–≥–ª–∞—Å–µ —É –ø—Ä–µ–≥–ª–µ–¥–∞—á—É Edge–ü–æ–∫—Ä–µ–Ω—É–ª–∏ —Å–º–æ –Ω–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏—ò–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –∫–æ—ò–µ –≤–∞–º –æ–º–æ–≥—É—õ–∞–≤–∞—ò—É –≤–∏—à–µ –∏–∑–±–æ—Ä–∞ —É –≤–µ–∑–∏ —Å–∞ –æ–≥–ª–∞—Å–∏–º–∞ –∫–æ—ò–∏ –≤–∞–º —Å–µ –ø—Ä–∏–∫–∞–∑—É—ò—É.–¢–µ–º–µ –æ–≥–ª–∞—Å–∞ –æ–º–æ–≥—É—õ–∞–≤–∞—ò—É —Å–∞—ò—Ç–æ–≤–∏–º–∞ –¥–∞ –≤–∞–º –ø—Ä–∏–∫–∞–∑—É—ò—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–µ –æ–≥–ª–∞—Å–µ, –∏—Å—Ç–æ–≤—Ä–µ–º–µ–Ω–æ —à—Ç–∏—Ç–µ—õ–∏ –≤–∞—à—É –∏—Å—Ç–æ—Ä–∏—ò—É –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ç–µ—Ç. Edge –º–æ–∂–µ –¥–∞ –±–µ–ª–µ–∂–∏ —Ç–µ–º–µ –∫–æ—ò–µ –≤–∞—Å –∑–∞–Ω–∏–º–∞—ò—É –Ω–∞ –æ—Å–Ω–æ–≤—É –≤–∞—à–µ –Ω–µ–¥–∞–≤–Ω–µ –∏—Å—Ç–æ—Ä–∏—ò–µ –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞. –ö–∞—Å–Ω–∏—ò–µ, –Ω–µ–∫–∏ –æ–¥ —Å–∞—ò—Ç–æ–≤–∞ –∫–æ—ò–µ –ø–æ—Å–µ—õ—É—ò–µ—Ç–µ –º–æ–∂–µ –æ–¥ –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edge –∑–∞—Ç—Ä–∞–∂–∏—Ç–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–µ —Ç–µ–º–µ –∫–∞–∫–æ –±–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–æ–≤–∞–æ –æ–≥–ª–∞—Å–µ –∫–æ—ò–∏ –≤–∞–º —Å–µ –ø—Ä–∏–∫–∞–∑—É—ò—É.–£ –ø–æ—Å—Ç–∞–≤–∫–∞–º–∞ –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç–∏ —Ç–µ–º–µ –æ–≥–ª–∞—Å–∞ –∏ –±–ª–æ–∫–∏—Ä–∞—Ç–∏ –æ–Ω–µ –∫–æ—ò–µ –Ω–µ –∂–µ–ª–∏—Ç–µ –¥–∞ –¥–µ–ª–∏—Ç–µ —Å–∞ —Å–∞—ò—Ç–æ–≤–∏–º–∞. Edge —Ç–∞–∫–æ—í–µ –∞—É—Ç–æ–º–∞—Ç—Å–∫–∏ –±—Ä–∏—à–µ —Ç–µ–º–µ –æ–≥–ª–∞—Å–∞ —Å—Ç–∞—Ä–∏—ò–µ –æ–¥ 4 —Å–µ–¥–º–∏—Ü–µ.–í–∏—à–µ –æ —Ç–µ–º–∞–º–∞ –æ–≥–ª–∞—Å–∞–£ –ø–æ—Å—Ç–∞–≤–∫–∞–º–∞ –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edge —É —Å–≤–∞–∫–æ–º —Ç—Ä–µ–Ω—É—Ç–∫—É –º–æ–∂–µ—Ç–µ –¥–∞ —Å–µ –ø—Ä–µ–¥–æ–º–∏—Å–ª–∏—Ç–µ<b>–ö–æ—ò–∏ –ø–æ–¥–∞—Ü–∏ —Å–µ –∫–æ—Ä–∏—Å—Ç–µ:</b> –¢–µ–º–µ –æ–≥–ª–∞—Å–∞ –∑–∞—Å–Ω–æ–≤–∞–Ω–µ —Å—É –Ω–∞ –≤–∞—à–æ—ò –Ω–µ–¥–∞–≤–Ω–æ—ò –∏—Å—Ç–æ—Ä–∏—ò–∏ –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞, –Ω–∞ –ª–∏—Å—Ç–∏ —Å–∞—ò—Ç–æ–≤–∞ –∫–æ—ò–µ —Å—Ç–µ –ø–æ—Å–µ—Ç–∏–ª–∏ –∫–æ—Ä–∏—Å—Ç–µ—õ–∏ Edge –Ω–∞ –æ–≤–æ–º —É—Ä–µ—í–∞—ò—É.<b>–ö–∞–∫–æ –∫–æ—Ä–∏—Å—Ç–∏–º–æ –æ–≤–µ –ø–æ–¥–∞—Ç–∫–µ:</b> Edge –±–µ–ª–µ–∂–∏ —Ç–µ–º–µ –∫–æ—ò–µ –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É—ò—É —Ç–æ–∫–æ–º –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞. –û–∑–Ω–∞–∫–µ —Ç–µ–º–∞ —É–Ω–∞–ø—Ä–µ–¥ —Å—É –¥–µ—Ñ–∏–Ω–∏—Å–∞–Ω–µ –∏ –æ–±—É—Ö–≤–∞—Ç–∞—ò—É —Å—Ç–≤–∞—Ä–∏ –∫–∞–æ —à—Ç–æ —Å—É –£–º–µ—Ç–Ω–æ—Å—Ç –∏ –∑–∞–±–∞–≤–∞, –ö—É–ø–æ–≤–∏–Ω–∞ –∏ –°–ø–æ—Ä—Ç –∏ —Ä–µ–∫—Ä–µ–∞—Ü–∏—ò–∞. –ö–∞—Å–Ω–∏—ò–µ, –Ω–µ–∫–∏ –æ–¥ —Å–∞—ò—Ç–æ–≤–∞ –∫–æ—ò–µ –ø–æ—Å–µ—õ—É—ò–µ—Ç–µ –º–æ–∂–µ –æ–¥ –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edge –∑–∞—Ç—Ä–∞–∂–∏—Ç–∏ –Ω–µ–∫–æ–ª–∏–∫–æ –≤–∞—à–∏—Ö —Ç–µ–º–∞ (–∞–ª–∏ –Ω–µ –∏ –∏—Å—Ç–æ—Ä–∏—ò—É –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞) –∫–∞–∫–æ –±–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–æ–≤–∞–æ –æ–≥–ª–∞—Å–µ –∫–æ—ò–∏ –≤–∞–º —Å–µ –ø—Ä–∏–∫–∞–∑—É—ò—É.<b>–ö–∞–∫–æ –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤—ô–∞—Ç–∏ –ø–æ–¥–∞—Ü–∏–º–∞:</b> Edge –∞—É—Ç–æ–º–∞—Ç—Å–∫–∏ –±—Ä–∏—à–µ —Ç–µ–º–µ —Å—Ç–∞—Ä–∏—ò–µ –æ–¥ 4 —Å–µ–¥–º–∏—Ü–µ. –¢–µ–º–∞ —Å–µ —Ç–æ–∫–æ–º –¥–∞—ô–µ–≥ –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞ –º–æ–∂–µ –ø–æ–Ω–æ–≤–æ –ø–æ—ò–∞–≤–∏—Ç–∏ –Ω–∞ –ª–∏—Å—Ç–∏. –ú–æ–∂–µ—Ç–µ –∏ –±–ª–æ–∫–∏—Ä–∞—Ç–∏ —Ç–µ–º–µ –∫–æ—ò–µ –Ω–µ –∂–µ–ª–∏—Ç–µ –¥–∞ Edge –¥–µ–ª–∏ —Å–∞ –¥—Ä—É–≥–∏–º —Å–∞—ò—Ç–æ–≤–∏–º–∞ –∏ —É —Å–≤–∞–∫–æ–º —Ç—Ä–µ–Ω—É—Ç–∫—É –º–æ–∂–µ—Ç–µ –∏—Å–∫—ô—É—á–∏—Ç–∏ —Ç–µ–º–µ —É –ø–æ—Å—Ç–∞–≤–∫–∞–º–∞ –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edge.–°–∞–∑–Ω–∞—ò—Ç–µ –≤–∏—à–µ –æ —Ç–æ–º–µ –∫–∞–∫–æ Microsoft —à—Ç–∏—Ç–∏ –≤–∞—à–µ –ø–æ–¥–∞—Ç–∫–µ —É –Ω–∞—à–∏–º –°–º–µ—Ä–Ω–∏—Ü–∞–º–∞ –∑–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç.–°–∞–¥–∞ —Å—É –¥–æ—Å—Ç—É–ø–Ω–µ –¥—Ä—É–≥–µ —Ñ—É–Ω–∫—Ü–∏—ò–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –∑–∞ —Ä–µ–∫–ª–∞–º–µ–ü–æ–∫—Ä–µ–Ω—É–ª–∏ —Å–º–æ –Ω–æ–≤–µ –Ω–∞—á–∏–Ω–µ –¥–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–º–æ —à—Ç–∞ —Å–∞—ò—Ç–æ–≤–∏ –º–æ–≥—É –¥–∞ —Å–∞–∑–Ω–∞—ò—É –æ –≤–∞–º–∞ –∫–∞–¥–∞ –≤–∞–º –ø—Ä–∏–∫–∞–∑—É—ò—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–æ–≤–∞–Ω–µ –æ–≥–ª–∞—Å–µ, –Ω–∞ –ø—Ä–∏–º–µ—Ä:–û–≥–ª–∞—Å–∏ –∫–æ—ò–µ –ø—Ä–µ–¥–ª–∞–∂–µ —Å–∞—ò—Ç –ø–æ–º–∞–∂—É —É –∑–∞—à—Ç–∏—Ç–∏ –∏—Å—Ç–æ—Ä–∏—ò–µ –ø—Ä–µ–≥–ª–µ–¥–∞—ö–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ç–µ—Ç–∞ –∏ —É –∏—Å—Ç–æ –≤—Ä–µ–º–µ –æ–º–æ–≥—É—õ–∞–≤–∞—ò—É —Å–∞—ò—Ç–æ–≤–∏–º–∞ –¥–∞ –≤–∞–º –ø—Ä–∏–∫–∞–∂—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–µ –æ–≥–ª–∞—Å–µ. –ù–∞ –æ—Å–Ω–æ–≤—É –≤–∞—à–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Å–∞—ò—Ç –∫–æ—ò–∏ —Å—Ç–µ –ø–æ—Å–µ—Ç–∏–ª–∏ –º–æ–∂–µ –¥–∞ –ø—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–≤–µ–∑–∞–Ω–µ –æ–≥–ª–∞—Å–µ –¥–æ–∫ –ø—Ä–µ–≥–ª–µ–¥–∞—Ç–µ. –£ –ø–æ—Å—Ç–∞–≤–∫–∞–º–∞ –º–æ–∂–µ—Ç–µ –¥–∞ –ø—Ä–∏–∫–∞–∂–µ—Ç–µ –ª–∏—Å—Ç—É –æ–≤–∏—Ö —Å–∞—ò—Ç–æ–≤–∞ –∏ –±–ª–æ–∫–∏—Ä–∞—Ç–µ –æ–Ω–µ –∫–æ—ò–µ –Ω–µ –∂–µ–ª–∏—Ç–µ.–£–∑ –º–µ—Ä–µ—ö–µ –æ–≥–ª–∞—Å–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏ —Ç–∏–ø–æ–≤–∏ –ø–æ–¥–∞—Ç–∞–∫–∞ —Å–µ –¥–µ–ª–µ –∏–∑–º–µ—í—É —Å–∞—ò—Ç–æ–≤–∞ –∫–∞–∫–æ –±–∏ —Å–µ –∏–∑–º–µ—Ä–∏–ª–µ –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å–µ —ö–∏—Ö–æ–≤–∏—Ö –æ–≥–ª–∞—Å–∞, –∫–∞–æ —à—Ç–æ —ò–µ –≤—Ä–µ–º–µ –ø—Ä–∏–∫–∞–∑–∏–≤–∞—ö–∞ –æ–≥–ª–∞—Å–∞.–í–∏—à–µ –æ –æ–≥–ª–∞—Å–∏–º–∞ –∫–æ—ò–µ –ø—Ä–µ–¥–ª–∞–∂–µ —Å–∞—ò—Ç –∏ –º–µ—Ä–µ—ö—É –æ–≥–ª–∞—Å–∞–ú–æ–∂–µ—Ç–µ –¥–∞ –∏–∑–≤—Ä—à–∏—Ç–µ –ø—Ä–æ–º–µ–Ω–µ —É –ø–æ—Å—Ç–∞–≤–∫–∞–º–∞ –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edge.–û–≥–ª–∞—Å–∏ –∫–æ—ò–µ –ø—Ä–µ–¥–ª–∞–∂–µ —Å–∞—ò—Ç<b>–ö–æ—ò–∏ –ø–æ–¥–∞—Ü–∏ —Å–µ –∫–æ—Ä–∏—Å—Ç–µ:</b> –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç –Ω–∞ —Å–∞—ò—Ç—É –∫–æ—ò–∏ —É–ø—Ä–∞–≤–æ –ø—Ä–µ–≥–ª–µ–¥–∞—Ç–µ –∫–æ—Ä–∏—Å—Ç–µ—õ–∏ Edge –Ω–∞ –æ–≤–æ–º —É—Ä–µ—í–∞—ò—É.<b>–ö–∞–∫–æ —Å–∞—ò—Ç–æ–≤–∏ –∫–æ—Ä–∏—Å—Ç–µ –æ–≤–µ –ø–æ–¥–∞—Ç–∫–µ:</b> –°–∞—ò—Ç–æ–≤–∏ –º–æ–≥—É –¥–∞ —Å–∫–ª–∞–¥–∏—à—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—ò–µ –ø–æ–º–æ—õ—É –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edge –æ —Å—Ç–≤–∞—Ä–∏–º–∞ –∫–æ—ò–µ –≤–∞–º —Å–µ —Å–≤–∏—í–∞—ò—É. –ù–∞ –ø—Ä–∏–º–µ—Ä, –∞–∫–æ –ø–æ—Å–µ—Ç–∏—Ç–µ —Å–∞—ò—Ç —É –≤–µ–∑–∏ —Å–∞ —Ç—Ä–µ–Ω–∏–Ω–≥–æ–º –∑–∞ –º–∞—Ä–∞—Ç–æ–Ω, —Å–∞—ò—Ç –º–æ–∂–µ –∑–∞–∫—ô—É—á–∏—Ç–∏ –¥–∞ –≤–∞—Å –∑–∞–Ω–∏–º–∞—ò—É –ø–∞—Ç–∏–∫–µ –∑–∞ —Ç—Ä—á–∞—ö–µ. –ö–∞—Å–Ω–∏—ò–µ, –∞–∫–æ –ø–æ—Å–µ—Ç–∏—Ç–µ –Ω–µ–∫–∏ –¥—Ä—É–≥–∏ —Å–∞—ò—Ç, —Ç–∞—ò —Å–∞—ò—Ç –≤–∞–º –º–æ–∂–µ –ø—Ä–∏–∫–∞–∑–∞—Ç–∏ –æ–≥–ª–∞—Å –∑–∞ –ø–∞—Ç–∏–∫–µ –∑–∞ —Ç—Ä—á–∞—ö–µ –∫–æ—ò–µ —ò–µ –ø—Ä–µ–¥–ª–æ–∂–∏–æ –ø—Ä–≤–∏ —Å–∞—ò—Ç.<b>–ö–∞–∫–æ –º–æ–∂–µ—Ç–µ –¥–∞ —É–ø—Ä–∞–≤—ô–∞—Ç–µ —Å–≤–æ—ò–∏–º –ø–æ–¥–∞—Ü–∏–º–∞::</b> Edge –∞—É—Ç–æ–º–∞—Ç—Å–∫–∏ –±—Ä–∏—à–µ —Å–∞—ò—Ç–æ–≤–µ —Å—Ç–∞—Ä–∏—ò–µ –æ–¥ 30 –¥–∞–Ω–∞. –°–∞—ò—Ç –∫–æ—ò–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ –ø–æ–Ω–æ–≤–æ –º–æ–∂–µ –¥–∞ —Å–µ –ø–æ–Ω–æ–≤–æ –ø–æ—ò–∞–≤–∏ –Ω–∞ –ª–∏—Å—Ç–∏.–¢–∞–∫–æ—í–µ, –º–æ–∂–µ—Ç–µ –∏ –¥–∞ –±–ª–æ–∫–∏—Ä–∞—Ç–µ —Å–∞—ò—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—Ö –æ–≥–ª–∞—Å–∞ –∫–∞–æ –∏ –¥–∞ —É –±–∏–ª–æ –∫–æ–º —Ç—Ä–µ–Ω—É—Ç–∫—É –∏—Å–∫—ô—É—á–∏—Ç–µ –æ–≥–ª–∞—Å–µ –∫–æ—ò–µ –ø—Ä–µ–¥–ª–∞–∂–µ —Å–∞—ò—Ç —É Edge –ø–æ—Å—Ç–∞–≤–∫–∞–º–∞.–ú–µ—Ä–µ—ö–µ –µ—Ñ–∏–∫–∞—Å–Ω–æ—Å—Ç–∏ –æ–≥–ª–∞—Å–∞–°–∞—ò—Ç–æ–≤–∏ –∫–æ—ò–µ –ø–æ—Å–µ—õ—É—ò–µ—Ç–µ –º–æ–≥—É –∑–∞—Ç—Ä–∞–∂–∏—Ç–∏ –æ–¥ –ø—Ä–µ–≥–ª–µ–¥–∞—á–∞ Edgno more processing is needed for this entry.
 */
async _handleSymlink(entry, directory, path, item) {
  if (this.fsw.closed) {
    return;
  }
  const full = entry.fullPath;
  const dir = this.fsw._getWatchedDir(directory);

  if (!this.fsw.options.followSymlinks) {
    // watch symlink directly (don't follow) and detect changes
    this.fsw._incrReadyCount();

    let linkPath;
    try {
      linkPath = await fsrealpath(path);
    } catch (e) {
      this.fsw._emitReady();
      return true;
    }

    if (this.fsw.closed) return;
    if (dir.has(item)) {
      if (this.fsw._symlinkPaths.get(full) !== linkPath) {
        this.fsw._symlinkPaths.set(full, linkPath);
        this.fsw._emit(EV_CHANGE, path, entry.stats);
      }
    } else {
      dir.add(item);
      this.fsw._symlinkPaths.set(full, linkPath);
      this.fsw._emit(EV_ADD, path, entry.stats);
    }
    this.fsw._emitReady();
    return true;
  }

  // don't follow the same symlink more than once
  if (this.fsw._symlinkPaths.has(full)) {
    return true;
  }

  this.fsw._symlinkPaths.set(full, true);
}

_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {
  // Normalize the directory name on Windows
  directory = sysPath.join(directory, EMPTY_STR);

  if (!wh.hasGlob) {
    throttler = this.fsw._throttle('readdir', directory, 1000);
    if (!throttler) return;
  }

  const previous = this.fsw._getWatchedDir(wh.path);
  const current = new Set();

  let stream = this.fsw._readdirp(directory, {
    fileFilter: entry => wh.filterPath(entry),
    directoryFilter: entry => wh.filterDir(entry),
    depth: 0
  }).on(STR_DATA, async (entry) => {
    if (this.fsw.closed) {
      stream = undefined;
      return;
    }
    const item = entry.path;
    let path = sysPath.join(directory, item);
    current.add(item);

    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {
      return;
    }

    if (this.fsw.closed) {
      stream = undefined;
      return;
    }
    // Files that present in current directory snapshot
    // but absent in previous are added to watch list and
    // emit `add` event.
    if (item === target || !target && !previous.has(item)) {
      this.fsw._incrReadyCount();

      // ensure relativeness of path is preserved in case of watcher reuse
      path = sysPath.join(dir, sysPath.relative(dir, path));

      this._addToNodeFs(path, initialAdd, wh, depth + 1);
    }
  }).on(EV_ERROR, this._boundHandleError);

  return new Promise(resolve =>
    stream.once(STR_END, () => {
      if (this.fsw.closed) {
        stream = undefined;
        return;
      }
      const wasThrottled = throttler ? throttler.clear() : false;

      resolve();

      // Files that absent in current directory snapshot
      // but present in previous emit `remove` event
      // and are removed from @watched[directory].
      previous.getChildren().filter((item) => {
        return item !== directory &&
          !current.has(item) &&
          // in case of intersecting globs;
          // a path may have been filtered out of this readdir, but
          // shouldn't be removed because it matches a different glob
          (!wh.hasGlob || wh.filterPath({
            fullPath: sysPath.resolve(directory, item)
          }));
      }).forEach((item) => {
        this.fsw._remove(directory, item);
      });

      stream = undefined;

      // one more time for any missed in case changes came in extremely quickly
      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);
    })
  );
}

/**
 * Read directory to add / remove files from `@watched` list and re-read it on change.
 * @param {String} dir fs path
 * @param {fs.Stats} stats
 * @param {Boolean} initialAdd
 * @param {Number} depth relative to user-supplied path
 * @param {String} target child path targeted for watch
 * @param {Object} wh Common watch helpers for this path
 * @param {String} realpath
 * @returns {Promise<Function>} closer for the watcher instance.
 */
async _handleDir(dir, stats, initialAdd, depth, target –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–∏ –∫√¥–¥.–ü–æ–∑–æ–≤–∏—Ç–µ –±–∞–Ω–∫—É –Ω–∞ –±—Ä–æ—ò $1 –¥–∞ –±–∏—Å—Ç–µ –¥–æ–±–∏–ª–∏ –∫√¥–¥ –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—ò—É.–ë–∞–Ω–∫–∞ –≤–∞–º —à–∞—ô–µ –∫√¥–¥ –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—ò—É –Ω–∞ –∞–¥—Ä–µ—Å—É $1.–£ –Ω–∞—Å—Ç–∞–≤–∫—É —É–Ω–µ—Å–∏—Ç–µ —à–∏—Ñ—Ä—É –∫–æ—ò—É —Å—Ç–µ –¥–æ–±–∏–ª–∏ –æ–¥ –±–∞–Ω–∫–µ.–ë–∞–Ω–∫–∞ —õ–µ –ø–æ–∑–≤–∞—Ç–∏ –≤–∞—à –±—Ä–æ—ò –º–æ–±–∏–ª–Ω–æ–≥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ $1 —Å–∞ –∫–æ–¥–æ–º –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—ò—É.–ë–∞–Ω–∫–∞ –≤–∞–º —à–∞—ô–µ –∫√¥–¥ –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—ò—É –Ω–∞ –±—Ä–æ—ò –º–æ–±–∏–ª–Ω–æ–≥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ $1.–ü—Ä–æ–≤–µ—Ä–∏—Ç–µ –¥–∞ –ª–∏ –∏—Å–ø—É—ö–∞–≤–∞—Ç–µ —É—Å–ª–æ–≤–µ –∑–∞ –ø–ª–∞—õ–∞—ö–µ —Ç–æ–∫–æ–º –≤—Ä–µ–º–µ–Ω–∞–ê—É—Ç–æ–º–∞—Ç—Å–∫–æ –ø–æ–ø—É—ö–∞–≤–∞—ö–µ –Ω–∏—ò–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Å–∞–ª–æ–¢—Ä–∞—ò–∞–ª–æ —ò–µ –ø—Ä–µ–≤–∏—à–µ –≤—Ä–µ–º–µ–Ω–∞–ö—É–ø–∏—Ç–µ –æ–¥–º–∞—Ö. –ü–ª–∞—Ç–∏—Ç–µ –Ω–∞ —Ä–∞—Ç–µ —É–∑ —É—Å–ª—É–≥—É Klarna. $1–ö–æ–º–µ—Ä—Ü–∏—ò–∞–ª–Ω—É –∫–∞—Ä—Ç–∏—Ü—É Klarna Visa¬Æ –∏–∑–¥–∞—ò–µ –±–∞–Ω–∫–∞ Sutton Bank, —á–ª–∞–Ω–∏—Ü–∞ FDIC, —É —Å–∫–ª–∞–¥—É —Å–∞ –ª–∏—Ü–µ–Ω—Ü–æ–º –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—ò–µ Visa U.S.A Inc. –ö–∞—Ä—Ç–∏—Ü–∞ Klarna –∫–æ—Ä–∏—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—ò—É –ø—Ä–µ–¥—É–∑–µ—õ–∞ Marqeta. –ö–æ—Ä–∏—Å–Ω–∏—á–∫–∞ —Å–ª—É–∂–±–∞ $1–ú–æ–≥—É—õ–∞ —ò–µ –ø—Ä–∏–º–µ–Ω–∞ Klarna —É—Å–ª—É–≥–µ –∏ –Ω–∞–∫–Ω–∞–¥–∞ –∑–∞ –∫–∞—à—ö–µ—ö–µKlarna —É—Å–ª—É–≥–∞ –æ–¥–ª–æ–∂–µ–Ω–æ–≥ –ø–ª–∞—õ–∞—ö–∞ –Ω–∞ $1–£—à—Ç–µ–¥–∏—Ç–µ –Ω–æ–≤–∞—Ü —É–∑ Klarna.–ê–∫–æ –Ω–∞—Å—Ç–∞–≤–∏—Ç–µ, –ø—Ä–∏—Å—Ç–∞—ò–µ—Ç–µ –Ω–∞ $1 –∏ –ø—Ä–∏—Ö–≤–∞—Ç–∞—Ç–µ –¥–∞ —Å–µ —É–∫—É–ø–∞–Ω –∏–∑–Ω–æ—Å –≤–∞—à–µ –Ω–∞–±–∞–≤–∫–µ –∑–∞—ò–µ–¥–Ω–æ —Å–∞ –ª–æ–∫–∞—Ü–∏—ò–æ–º –∫—É–ø–æ–≤–∏–Ω–µ –¥–µ–ª–∏ —Å–∞ –ø—Ä–µ–¥—É–∑–µ—õ–µ–º Klarna, —É —Å–∫–ª–∞–¥—É —Å–∞ $2. –ê–∫–æ —Å—Ç–µ –Ω–µ–¥–∞–≤–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∏ –∑–∞ —Ç—Ä–∞–Ω—Å–∞–∫—Ü–∏—ò—É –æ–¥ —Å—Ç—Ä–∞–Ω–µ –∫–æ–º–ø–∞–Ω–∏—ò–µ Klarna, –º–æ–≥—É —Å–µ –ø—Ä–∏–º–µ–Ω–∏—Ç–∏ —É—Å–ª–æ–≤–∏ –ø–ª–∞—õ–∞—ö–∞ —Å–∞ —Ç–∏–º –æ–¥–æ–±—Ä–µ—ö–µ–º.–£–ø—Ä–∞–≤—ô–∞—ò—Ç–µ –Ω–∞—á–∏–Ω–∏–º–∞ –ø–ª–∞—õ–∞—ö–∞–ê–∫–æ –Ω–∞—Å—Ç–∞–≤–∏—Ç–µ, –ø—Ä–∏—Ö–≤–∞—Ç–∞—Ç–µ $1, $2 –∏ $3 —É –≤–µ–∑–∏ —Å–∞ –Ω–∞—á–∏–Ω–æ–º –Ω–∞ –∫–æ—ò–∏ —Å–µ –ø–æ—Å—Ç—É–ø–∞ —Å–∞ –≤–∞—à–∏–º –ø–æ–¥–∞—Ü–∏–º–∞.–ò–¥–∏ –Ω–∞ —Å–ª–µ–¥–µ—õ—É —Å—Ç—Ä–∞–Ω–∏—Ü—É–ò–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É $1–ò–¥–∏ –Ω–∞ –ø—Ä–µ—Ç—Ö–æ–¥–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—É–£–ø–∏—à–∏—Ç–µ —Å–µ–ü–ª–∞—õ–∞—ò—Ç–µ –±–µ–∑–±–µ–¥–Ω–æ –≤–∏—Ä—Ç—É–µ–ª–Ω–æ–º –∫–∞—Ä—Ç–∏—Ü–æ–º–ü–æ–¥–µ—Å–∏—Ç–µ –≤–∏—Ä—Ç—É–µ–ª–Ω—É –∫–∞—Ä—Ç–∏—Ü—É –∏ –æ—Å–≤–æ—ò–∏—Ç–µ 20 Microsoft Rewards –ø–æ–µ–Ω–∞–ò–∑–¥–∞–≤–∞–ª–∞—Ü –∫–∞—Ä—Ç–∏—Ü–µ –º–æ–∂–µ –ø–æ—Å–ª–∞—Ç–∏ –∫√¥–¥ –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—ò—É –∏–ª–∏ –∑–∞—Ç—Ä–∞–∂–∏—Ç–∏ –±–µ–∑–±–µ–¥–Ω–æ—Å–Ω–∏ –∫√¥–¥ –∫–∞—Ä—Ç–∏—Ü–µ –∫–∞–∫–æ –±–∏ –ø–æ—Ç–≤—Ä–¥–∏–æ –¥–∞ —Å—Ç–µ —Ç–æ –≤–∏.–í–∏—Ä—Ç—É–µ–ª–Ω–∞ –∫–∞—Ä—Ç–∏—Ü–∞ —Å–∫—Ä–∏–≤–∞ –¥–µ—Ç–∞—ô–µ –∫–∞—Ä—Ç–∏—Ü–µ –æ–¥ —Ç—Ä–≥–æ–≤–∞—Ü–∞ –∫–∞–¥–∞ –∫—É–ø—É—ò–µ—Ç–µ –Ω–∞ –º—Ä–µ–∂–∏. –ê–∫–æ –∫–æ–¥ –Ω–µ–∫–æ–≥–∞ –æ–¥ —ö–∏—Ö –¥–æ—í–µ –¥–æ –Ω–∞—Ä—É—à–∞–≤–∞—ö–∞ –±–µ–∑–±–µ–¥–Ω–æ—Å—Ç–∏ –ø–æ–¥–∞—Ç–∞–∫–∞, –≤–∞—à–∏ –ø–æ–¥–∞—Ü–∏ –æ—Å—Ç–∞—ò—É –∑–∞—à—Ç–∏—õ–µ–Ω–∏. $1–ê–∫–æ –Ω–∞—Å—Ç–∞–≤–∏—Ç–µ, –ø—Ä–∏—Ö–≤–∞—Ç–∞—Ç–µ $1.–ê–ø–ª–∏–∫–∞—Ü–∏—ò–∞ –∑–∞ –º–æ–±–∏–ª–Ω–æ –±–∞–Ω–∫–∞—Ä—Å—Ç–≤–æ–ö–æ—Ä–∏—Å–Ω–∏—á–∫–∞ —É—Å–ª—É–≥–∞ –±–∞–Ω–∫–µ–†–∞—á—É–Ω —É –±–∞–Ω—Ü–∏–¢–µ–ª–µ—Ñ–æ–Ω—Å–∫–∏ –ø–æ–∑–∏–≤–ü–æ—Ç–≤—Ä–¥–∏—Ç–µ –±–µ–∑–±–µ–¥–Ω–æ—Å–Ω–∏ –∫√¥–¥ –∏ –ø–æ–∫—É—à–∞—ò—Ç–µ –ø–æ–Ω–æ–≤–æ.–í–∞—à–∞ –±–∞–Ω–∫–∞ –∑–∞—Ö—Ç–µ–≤–∞ –¥–∞ –≤–µ—Ä–∏—Ñ–∏–∫—É—ò–µ—Ç–µ CVV –±–µ–∑–±–µ–¥–Ω–æ—Å–Ω—É —à–∏—Ñ—Ä—É –ø–æ–≤–µ–∑–∞–Ω—É —Å–∞ –≤–∞—à–∏–º $1 –∫–æ—ò–∏ —Å–µ –∑–∞–≤—Ä—à–∞–≤–∞ –Ω–∞ $2.–ò–∑–¥–∞–≤–∞–ª–∞—Ü –∫–∞—Ä—Ç–∏—Ü–µ —ò–µ –Ω–∞–∏—à–∞–æ –Ω–∞ –ø—Ä–æ–±–ª–µ–º –ø—Ä–∏–ª–∏–∫–æ–º —Å–ª–∞—ö–∞ –∫–æ–¥–∞. –ó–∞—Ö—Ç–µ–≤–∞—ò—Ç–µ –¥—Ä—É–≥–∏ –∫√¥–¥ –∏–ª–∏ –∫–æ—Ä–∏—Å—Ç–∏—Ç–µ –¥—Ä—É–≥–∏ –º–µ—Ç–æ–¥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—ò–µ.–ò–∑–¥–∞–≤–∞–ª–∞—Ü –∫–∞—Ä—Ç–∏—Ü–µ —ò–µ –∏–º–∞–æ –ø—Ä–æ–±–ª–µ–º –ø—Ä–